#!/bin/bash

export SRC_DIR="$HOME/Documents/repos"
export BUILD_DIR="$HOME/Documents/build"
export JOBS=1

cd $SRC_DIR

if [ ! -d "$BUILD_DIR" ]; then
    mkdir $BUILD_DIR
fi

faust() {

if [ ! -d "faust" ]; then
    git clone --recursive https://github.com/grame-cncm/faust.git
fi

(
cd faust/build
echo '
set ( ASMJS_BACKEND  OFF CACHE STRING  "Include ASMJS backend" FORCE )
set ( C_BACKEND      COMPILER STATIC DYNAMIC        CACHE STRING  "Include C backend"         FORCE )
set ( CPP_BACKEND    COMPILER STATIC DYNAMIC        CACHE STRING  "Include CPP backend"       FORCE )
set ( FIR_BACKEND    OFF        CACHE STRING  "Include FIR backend"       FORCE )
set ( INTERP_BACKEND OFF        CACHE STRING  "Include INTERPRETER backend" FORCE )
set ( JAVA_BACKEND   OFF        CACHE STRING  "Include JAVA backend"      FORCE )
set ( JS_BACKEND     OFF        CACHE STRING  "Include JAVASCRIPT backend" FORCE )
set ( LLVM_BACKEND   COMPILER STATIC DYNAMIC        CACHE STRING  "Include LLVM backend"      FORCE )
set ( OLDCPP_BACKEND OFF        CACHE STRING  "Include old CPP backend"   FORCE )
set ( RUST_BACKEND   OFF        CACHE STRING  "Include RUST backend"      FORCE )
set ( WASM_BACKEND   OFF   CACHE STRING  "Include WASM backend"  FORCE )
' > backends/llvm.cmake
)

(
cd $BUILD_DIR

if [ ! -d "faust" ]; then
   mkdir faust
fi

cd faust

cmake -C $SRC_DIR/faust/build/backends/llvm.cmake -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DINCLUDE_STATIC=1 -DINCLUDE_OSC=1 -DINCLUDE_HTTP=1 -DINCLUDE_EXECUTABLE=1 $SRC_DIR/faust/build 
make -j$JOBS
sudo make install
)

}

score() {

sudo apt -y install qtbase5-dev qtbase5-dev-tools libportmidi0 libasound-dev mesa-common-dev libavahi-compat-libdnssd-dev lilv-utils qtquickcontrols2-5-dev libqt5serialport5-dev libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev libqt5serialport5-dev 

if [ ! -d "score" ]; then
    git clone --recursive https://github.com/OSSIA/score.git 
fi

if [ ! -d "score-user-library" ]; then
    git clone --recursive https://github.com/OSSIA/score-user-library.git
fi

(
cd $BUILD_DIR

if [ ! -d "score" ]; then
   mkdir score
fi

cd score

cmake $SRC_DIR/score -DSCORE_CONFIGURATION=static-release -DPORTAUDIO_ONLY_DYNAMIC=1 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
make all_unity -j$JOBS
rm -rf *.deb
cpack
sudo dpkg -i *.deb
)
 
}

ossia() {

if [ ! -d "score" ]; then
    score
fi

(
cd $BUILD_DIR

if [ ! -d "ossia-pd" ]; then
   mkdir ossia-pd
fi

cd ossia-pd

cmake $SRC_DIR/score/3rdparty/libossia -DOSSIA_PD_ONLY=1 -DOSSIA_PD_INSTALL_FOLDER=${HOME}/Documents/Pd/externals/ossia
make -j$JOBS
make install
)

}

supercollider() {

sudo apt -y install libavahi-client-dev libicu-dev libreadline6-dev libxt-dev qt5-qmake qttools5-dev-tools qtpositioning5-dev libqt5sensors5-dev libqt5opengl5-dev qtwebengine5-dev

if [ ! -d "wsclang" ]; then
    git clone --recursive https://github.com/pchdev/wsclang.git
fi

(
cd wsclang

yes | cp -rf overwrites/lang/CMakeLists.txt dependencies/supercollider/lang
yes | cp -rf overwrites/lang/LangPrimSource/OSCData.cpp dependencies/supercollider/lang/LangPrimSource
yes | cp -rf overwrites/lang/LangPrimSource/PyrPrimitive.cpp dependencies/supercollider/lang/LangPrimSource
yes | cp -rf sclang/WebSocket dependencies/supercollider/SCClassLibrary/Common
)

(
cd $BUILD_DIR

if [ ! -d "supercollider" ]; then
   mkdir supercollider
fi

cd supercollider

cmake $SRC_DIR/wsclang/dependencies/supercollider -DCMAKE_BUILD_TYPE=Release 
make -j$JOBS
sudo make install
)

sc3-plugins

}
 
sc3-plugins() {

if [ ! -d "sc3-pluginsHOA" ]; then
    git clone --recursive https://github.com/scrime-u-bordeaux/sc3-pluginsHOA.git
fi

if [ ! -d "adt" ]; then
    git clone https://bitbucket.org/ambidecodertoolbox/adt.git
    (
        cd adt
        octave adt_initialize
    )
fi

if [ ! -d "$HOME/.local/share/ATK/" ]; then
    mkdir $HOME/.local/share/ATK
    (
        cd $HOME/.local/share/ATK
        git clone https://github.com/ambisonictoolkit/atk-kernels.git
        git clone https://github.com/ambisonictoolkit/atk-matrices.git
        
        mv atk-kernels kernels
        mv atk-matrices matrices
    )
fi

(
cd $BUILD_DIR

if [ ! -d "sc3-pluginsHOA" ]; then
   mkdir sc3-pluginsHOA
fi

cd sc3-pluginsHOA

cmake $SRC_DIR/sc3-pluginsHOA -DSC_PATH=$SRC_DIR/wsclang/dependencies/supercollider -DCMAKE_BUILD_TYPE=Release -DLADSPA=0
make -j$JOBS
sudo make install
)

}

ardour() {

sudo apt -y purge ardour
sudo apt -y install libgtkmm-2.4-dev autotools-dev cdbs dh-buildinfo devscripts libarchive-dev libaubio-dev libboost-dev libcppunit-dev libcurl3-gnutls libcurl4-gnutls-dev libglibmm-2.4-dev liblo-dev liblrdf0-dev libraptor2-dev librubberband-dev libsamplerate0-dev libsratom-dev libserd-dev libsord-dev libtag1-dev libcwiid-dev libxml2-dev itstool vamp-plugin-sdk

if [ ! -d "ardour" ]; then
    git clone --recursive https://github.com/ardour/ardour.git
fi

(
cd ardour

git checkout tags/5.12

sudo ./waf uninstall
./waf configure --freedesktop --lxvst --lv2 --ptformat --nls --optimize --with-backend=alsa,jack,dummy 
./waf build -j$JOBS
sudo ./waf install
./tools/videotimeline/install_video_tools.sh 
)

}

zyn() {

sudo apt -y install ruby libtool libmxml-dev automake libz-dev mesa-common-dev libgl1-mesa-dev libfontconfig1-dev bison

if [ ! -d "zyn-fusion-build" ]; then
    git clone --recursive https://github.com/zynaddsubfx/zyn-fusion-build.git
fi

(
cd zyn-fusion-build

ruby build-linux.rb
tar -jxvf zyn-fusion-linux-64bit-3.0.3-patch1-release.tar.bz2
cd zyn-fusion
sudo bash ./install-linux.sh
)

}

guido() {

if [ ! -d guidolib ]; then
    git clone https://github.com/grame-cncm/guidolib.git 
fi

(
cd guidolib

cd $BUILD_DIR

if [ ! -d "guidolib" ]; then
   mkdir guidolib
fi

cd guidolib

cmake $SRC_DIR/guidolib/build -DGL=0 -DSTATICLIB=1 -DCMAKE_BUILD_TYPE=release
make -j$JOBS
sudo make install
)

if [ ! -d guidoar ]; then
   git clone https://github.com/grame-cncm/guidoar.git
fi

(
cd guidoar

cd $BUILD_DIR

if [ ! -d "guidoar" ]; then
   mkdir guidoar
fi

cd guidoar

cmake $SRC_DIR/guidoar/build -DCMAKE_BUILD_TYPE=release
make -j$JOBS
sudo make install
)

}

inscore() {

sudo apt -y install qtmultimedia5-dev libqt5multimedia5-plugins

if [ ! -d "inscore" ]; then
    git clone --recursive https://github.com/grame-cncm/inscore.git
fi

(
cd inscore

cd build 
make -j$JOBS
sudo mv bin/inscoreviewer /usr/bin
sudo mv bin/lib* /usr/lib
)

}

osc() {

sudo apt -y install nodejs npm chromium-browser

if [ ! -d "open-stage-control" ]; then
    git clone https://github.com/jean-emmanuel/open-stage-control.git
fi

(
cd open-stage-control

npm install

export PLATFORM=linux
npm run build
npm run package

rm -rf dist/open-stage-control-linux-x64/*.deb
npm run deb64
sudo dpkg -i dist/open-stage-control-linux-x64/*.deb
)

}

rack() {

sudo apt -y install gdb libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev zlib1g-dev libgtk2.0-dev jq

if [ ! -d "Rack" ]; then
    git clone --recursive https://github.com/VCVRack/Rack.git
fi

(

cd Rack

make dep -j$JOBS

cd plugins
#[submodule "repos/21kHz"]
	git clone --recursive https://github.com/21kHz/21kHz-rack-plugins.git
#[submodule "repos/8Mode"]
	git clone --recursive https://github.com/8Mode/8Mode-VCV_Modules.git
#[submodule "repos/AS"]
	git clone --recursive https://github.com/AScustomWorks/AS.git
#[submodule "repos/Ahornberg"]
	git clone --recursive https://github.com/Coirt/Ahornberg-Microtonal.git
#[submodule "repos/Alikins"]
	git clone --recursive https://github.com/alikins/Alikins-rack-plugins
#[submodule "repos/AmalgamatedHarmonics"]
	git clone --recursive https://github.com/jhoar/AmalgamatedHarmonics
#[submodule "repos/AnimatedCircuits"]
	git clone --recursive https://github.com/AnimatedCircuits/RackModules.git
#[submodule "repos/ArableInstruments"]
	git clone --recursive https://github.com/adbrant/ArableInstruments
#[submodule "repos/AudibleInstruments"]
	git clone --recursive https://github.com/VCVRack/AudibleInstruments.git
#[submodule "repos/BOKONTEPByteBeatMachine"]
	git clone --recursive https://github.com/bokontep/BokontepByteBeatMachine.git
#[submodule "repos/BaconMusic"]
	git clone --recursive https://github.com/baconpaul/BaconPlugs.git
#[submodule "repos/Bark"]
	git clone --recursive https://github.com/Coirt/Bark.git
#[submodule "repos/BeckstromResearch"]
	git clone --recursive https://github.com/chrisbeckstrom/Beckstrom_Research_Rack.git
#[submodule "repos/Befaco"]
	git clone --recursive https://github.com/VCVRack/Befaco
#[submodule "repos/Bidoo"]
	git clone --recursive https://github.com/sebastien-bouffier/Bidoo.git
#[submodule "repos/Bogaudio"]
	git clone --recursive https://github.com/bogaudio/BogaudioModules
#[submodule "repos/CYC"]
	git clone --recursive https://github.com/mrletourneau/strong_kar.git
#[submodule "repos/CatroModulo"]
	git clone --recursive https://github.com/catronomix/catro-modulo.git
#[submodule "repos/CharredDesert"]
	git clone --recursive https://github.com/JerrySievert/CharredDesert
#[submodule "repos/ChortlingHamsterModules"]
	git clone --recursive https://github.com/chortlinghamster/modules.git
#[submodule "repos/Circlefade"]
	git clone --recursive https://github.com/max-circlefade/Circlefade.git
#[submodule "repos/CountModula"]
	git clone --recursive https://github.com/countmodula/VCVRackPlugins.git
#[submodule "repos/DHE-Modules"]
	git clone --recursive https://github.com/dhemery/DHE-Modules
#[submodule "repos/DrumKit"]
	git clone --recursive https://github.com/JerrySievert/DrumKit
#[submodule "repos/EH_modules"]
	git clone --recursive https://github.com/eh2k/fv1-emu
#[submodule "repos/ESeries"]
	git clone --recursive https://github.com/VCVRack/ESeries
#[submodule "repos/Edge"]
	git clone --recursive https://github.com/Edge-Modules/Edge.git
#[submodule "repos/ErraticInstruments"]
	git clone --recursive https://github.com/bafonso/Erratic.git
#[submodule "repos/ExpertSleepers-Encoders"]
	git clone --recursive https://github.com/expertsleepersltd/vcvrack-encoders
#[submodule "repos/FrankBuss"]
	git clone --recursive https://github.com/FrankBuss/FrankBussRackPlugin.git
#[submodule "repos/FrozenWasteland"]
	git clone --recursive https://github.com/almostEric/FrozenWasteland
#[submodule "repos/Geodesics"]
	git clone --recursive https://github.com/MarcBoule/Geodesics.git
#[submodule "repos/GoodSheperd"]
	git clone --recursive https://github.com/jensschulze/GoodSheperd.git
#[submodule "repos/Gratrix"]
	git clone --recursive https://github.com/gratrix/vcv-gratrix
#[submodule "repos/HetrickCV"]
	git clone --recursive https://github.com/mhetrick/hetrickcv
#[submodule "repos/HolonicSystems-Free"]
	git clone --recursive https://github.com/hdavid/VCVRack-Holon.ist.git
#[submodule "repos/ImpromptuModular"]
	git clone --recursive https://github.com/MarcBoule/ImpromptuModular.git
#[submodule "repos/JW-Modules"]
	git clone --recursive https://github.com/jeremywen/JW-Modules
#[submodule "repos/KarateSnoopy"]
	git clone --recursive https://github.com/KarateSnoopy/vcv-karatesnoopy
#[submodule "repos/Koralfx-Modules"]
	git clone --recursive https://github.com/koralfx/Koralfx-Modules
#[submodule "repos/LOGinstruments"]
	git clone --recursive https://github.com/leopard86/LOGinstruments
#[submodule "repos/LabSeven"]
	git clone --recursive https://github.com/LabSevenDevVCVRack/LabSeven_VCVRack_modules.git
#[submodule "repos/LindenbergResearch"]
	git clone --recursive https://github.com/lindenbergresearch/LRTRack
#[submodule "repos/LomasModules"]
	git clone --recursive https://github.com/LomasModules/LomasModules
#[submodule "repos/ML_modules"]
	git clone --recursive https://github.com/martin-lueders/ML_modules
#[submodule "repos/MicMusic"]
	git clone --recursive https://github.com/very-cool-name/MicMusic-VCV.git
#[submodule "repos/ModularFungi"]
	git clone --recursive https://github.com/david-c14/ModularFungi.git
#[submodule "repos/MosquitoLabs"]
	git clone --recursive https://github.com/rmosquito/vcv-mosquito.git
#[submodule "repos/MrLumps"]
	git clone --recursive https://github.com/djpeterso23662/MrLumps
#[submodule "repos/MyLittleTools"]
	git clone --recursive https://github.com/digitalhappens/MyLittleTools.git
#[submodule "repos/NauModular"]
	git clone --recursive https://github.com/naus3a/NauModular
#[submodule "repos/NocturnalEncoder"]
	git clone --recursive https://github.com/djpeterso23662/NocturnalEncoder.git
#[submodule "repos/Nohmad"]
	git clone --recursive https://github.com/joelrobichaud/Nohmad.git
#[submodule "repos/NonLinearInstruments"]
	git clone --recursive https://github.com/NonLinearInstruments/NLNRI_VCVRackPlugins
#[submodule "repos/Ohmer"]
	git clone --recursive https://github.com/DomiKamu/Ohmer
#[submodule "repos/PG-Instruments"]
	git clone --recursive https://github.com/imekon/PG-Instruments.git
#[submodule "repos/ParableInstruments"]
	git clone --recursive https://github.com/adbrant/ArableInstruments.git
#[submodule "repos/Prism"]
	git clone --recursive https://github.com/AmalgamatedHarmonics/Prism.git
#[submodule "repos/PvC"]
	git clone --recursive https://github.com/phdsg/PvC.git
#[submodule "repos/Quadraphonics"]
	git clone --recursive https://github.com/KoreTeknology/Quadraphonic-Plugins-for-VCV-Rack.git
#[submodule "repos/QuantalAudio"]
	git clone --recursive https://github.com/sumpygump/quantal-audio.git
#[submodule "repos/Qwelk"]
	git clone --recursive https://github.com/raincheque/qwelk.git
#[submodule "repos/RJModules"]
	git clone --recursive https://github.com/Miserlou/RJModules
#[submodule "repos/RODENTMODULES"]
	git clone --recursive https://github.com/RODENTCAT/RODENTMODULES.git
#[submodule "repos/SLM"]
	git clone --recursive https://github.com/salvolm84/SLM-vcv-rack.git
#[submodule "repos/STS"]
	git clone --recursive https://github.com/SmallTownSound/STS.git
#[submodule "repos/Sculpt-O-Sound"]
	git clone --recursive https://github.com/josbouten/Sculpt-O-Sound.git
#[submodule "repos/SerialRacker"]
	git clone --recursive https://github.com/apbianco/SerialRacker.git
#[submodule "repos/SignalFlux"]
	git clone --recursive https://github.com/signal-flux/Signal-Flux-VCV-Rack-Modules.git
#[submodule "repos/SkJack"]
	git clone --recursive https://github.com/Skrylar/skjack-vcv.git
#[submodule "repos/Skylights"]
	git clone --recursive https://github.com/Skrylar/skylights-vcv.git
#[submodule "repos/SonusModular"]
	git clone --recursive https://gitlab.com/sonusdept/sonusmodular.git
#[submodule "repos/Southpole"]
	git clone --recursive https://github.com/gbrandt1/southpole-vcvrack.git
#[submodule "repos/Southpole-parasites"]
	git clone --recursive https://github.com/gbrandt1/southpole-vcvrack.git
#[submodule "repos/Starling_Via"]
	git clone --recursive https://github.com/starlingcode/Via-for-Rack.git
#[submodule "repos/Stoermelder-P1"]
	git clone --recursive https://github.com/stoermelder/vcvrack-packone
#[submodule "repos/SubmarineFree"]
	git clone --recursive https://github.com/david-c14/SubmarineFree.git
#[submodule "repos/SubmarineUtility"]
	git clone --recursive https://github.com/david-c14/SubmarineUtility.git
#[submodule "repos/SynthKit"]
	git clone --recursive https://github.com/JerrySievert/SynthKit
#[submodule "repos/TheXOR"]
	git clone --recursive https://github.com/The-XOR/RackPlugins
#[submodule "repos/TriggerFish-Elements"]
	git clone --recursive https://github.com/JTriggerFish/TriggerFish-VCV.git
#[submodule "repos/UnforgettableLuncheon"]
	git clone --recursive https://github.com/johnnymurf/Unforgettable-Luncheon.git
#[submodule "repos/ValleyFree"]
	git clone --recursive https://github.com/ValleyAudio/ValleyRackFree.git
#[submodule "repos/WhatTheRack"]
	git clone --recursive https://github.com/korfuri/WhatTheRack.git
#[submodule "repos/ZZC"]
	git clone --recursive https://github.com/zezic/ZZC.git
#[submodule "repos/aP-Modules"]
	git clone --recursive https://github.com/aptrn/aP-Modules.git
#[submodule "repos/alto777_LFSR"]
	git clone --recursive https://github.com/alto777/LFSR.git
#[submodule "repos/arjo_modules"]
	git clone --recursive https://github.com/ArjoNagelhout/arjo_modules
#[submodule "repos/cf"]
	git clone --recursive https://github.com/cfoulc/cf
#[submodule "repos/com-soundchasing-stochasm"]
	git clone --recursive https://github.com/teletypist/stochasm.git
#[submodule "repos/computerscare"]
	git clone --recursive https://github.com/freddyz/computerscare-vcv-modules
#[submodule "repos/dBiz"]
	git clone --recursive https://github.com/dBiz/dBiz
#[submodule "repos/huaba"]
	git clone --recursive https://github.com/dhuber81/huaba.git
#[submodule "repos/luckyxxl"]
	git clone --recursive https://github.com/luckyxxl/vcv_luckyxxl
#[submodule "repos/mental"]
	git clone --recursive https://github.com/Strum/Strums_Mental_VCV_Modules
#[submodule "repos/moDllz"]
	git clone --recursive https://github.com/dllmusic/VCV_moDllz
#[submodule "repos/modular80"]
	git clone --recursive https://github.com/cschol/modular80
#[submodule "repos/mscHack"]
	git clone --recursive https://github.com/mschack/VCV-Rack-Plugins.git
#[submodule "repos/mtsch-plugins"]
	git clone --recursive https://github.com/mtsch/mtsch-vcvrack-plugins
#[submodule "repos/noobhour"]
	git clone --recursive https://github.com/NicolasNeubauer/noobhour_modules
#[submodule "repos/rcm"]
	git clone --recursive https://github.com/Rcomian/rcm-modules.git
#[submodule "repos/repelzen"]
	git clone --recursive https://github.com/wiqid/repelzen
#[submodule "repos/s-ol"]
	git clone --recursive https://github.com/s-ol/vcvmods
#[submodule "repos/sb-StochKit"]
	git clone --recursive https://github.com/smbddha/sb-StochKit.git
#[submodule "repos/squinkylabs-plug1"]
	git clone --recursive https://github.com/squinkylabs/SquinkyVCV
#[submodule "repos/trowaSoft"]
	git clone --recursive https://github.com/j4s0n-c/trowaSoft-VCV.git
#[submodule "repos/unless_modules"]
	git clone --recursive https://gitlab.com/unlessgames/unless_modules.git
#[submodule "repos/wiqid-anomalies"]
	git clone --recursive https://github.com/wiqid/anomalies.git

if [ ! -d "$HOME/.Rack" ]; then
    mkdir $HOME/.Rack 
    mkdir $HOME/.Rack/plugins-v1 
fi

for folder in * 
do
(
cd $folder
make dep $1 -j$JOBS
make $1 -j$JOBS
make install
)
done

cd ..

if [ ! -d "Bridge" ]; then
    git clone --recursive https://github.com/scrime-u-bordeaux/Bridge.git
fi

cd Bridge/VST

if [ ! -d "VST2_SDK" ]; then
    wget https://archive.org/download/VST2SDK/vstsdk2_4.zip
    unzip vstsdk2_4.zip
    mv vstsdk2.4 VST2_SDK
fi

make dist -j$JOBS
sudo make install

cd ../../

make -j$JOBS
sudo mv Rack /usr/bin
cp Core.json ~/.Rack
cp -r res ~/.Rack
)

}

arduino() {

if [ ! -e "arduino-1.8.10-linux64.tar.xz" ]; then
    rm -rf arduino-*-linux64.tar.xz
    wget https://downloads.arduino.cc/arduino-1.8.10-linux64.tar.xz
fi

if [ ! -e "TeensyduinoInstall.linux64" ]; then
    rm -rf TeensyduinoInstall.linux64 
    wget https://www.pjrc.com/teensy/td_148/TeensyduinoInstall.linux64
    wget http://www.pjrc.com/teensy/49-teensy.rules
fi

rm -rf ../build/arduino-*
tar -xJvf arduino-*-linux64.tar.xz -C ../build/
sudo cp 49-teensy.rules /etc/udev/rules.d/49-teensy.rules

(
cd $BUILD_DIR
cd arduino*
./arduino-linux-setup.sh $USER
sudo ./install.sh
)

chmod +x TeensyduinoInstall.linux64

echo "install Teensyduino in $USER/Documents/build/arduino{version}" 

./TeensyduinoInstall.linux64

}

if [ ! -z "$2" ]; then 
    JOBS=$2
fi

if [ "$1" == "--faust" ]; then
    faust
    exit
fi

if [ "$1" == "--score" ]; then
    score
    exit
fi

if [ "$1" == "--ossia" ]; then
    ossia
    exit
fi

if [ "$1" == "--supercollider" ]; then
    supercollider
    exit
fi

if [ "$1" == "--sc3-plugins" ]; then
    sc3-plugins
    exit
fi

if [ "$1" == "--ardour" ]; then
    ardour
    exit
fi

if [ "$1" == "--zyn" ]; then
    zyn
    exit
fi

if [ "$1" == "--guido" ]; then
    guido
    exit
fi

if [ "$1" == "--inscore" ]; then
    inscore
    exit
fi

if [ "$1" == "--osc" ]; then
    osc
    exit
fi

if [ "$1" == "--rack" ]; then
    rack
    exit
fi

if [ "$1" == "--arduino" ]; then
    arduino
    exit
fi

if [ "$1" == "--all" ]; then
    faust
    score
    ossia
    supercollider
    ardour
    zyn
    guido
    inscore
    osc
    rack
    arduino
    exit
fi

if [ "$1" == "--pull" ]; then

    (
        cd $BUILD_DIR
        rm -rf *
    )
    
    # faust
    (
        if [ -d "faust" ]; then
            cd faust
            git pull
            git submodule update --init --recursive 
        fi
    )
    
    # score
    (
        if [ -d "score" ]; then
            (
                cd score 
                git pull    
                git submodule update --init --recursive 
            )
        fi

        if [ -d "score-user-library" ]; then 
            cd ../score-user-library
            git pull
        fi
    )
    
    # supercollider
    (
        if [ -d "wsclang" ]; then
            cd wsclang
            git pull
            git submodule update --init --recursive
        fi
    )

    # sc3-pluginsHOA
    (
        if [ -d "sc3-pluginsHOA" ]; then
            (
                cd sc3-pluginsHOA
                git pull
                git submodule update --init --recursive 
            )
        fi

        if [ -d "adt" ]; then
            cd adt
            git pull
        fi

        if [ -d "$HOME/.local/share/ATK/" ]; then
            cd $HOME/.local/share/ATK/kernels
            git pull
        
            cd ../matrices
            git pull
        fi
    )
    
    # ardour
    (
        if [ -d "ardour" ]; then
            cd ardour
            ./waf clean
            git pull
            git submodule update --init --recursive
        fi
    )
    
    # zyn
    (
        if [ -d "zyn-fusion-build" ]; then
            cd zyn-fusion-build
            git pull
            git submodule update --init --recursive
        fi
    )
    
    # guido
    (
        if [ -d guidolib ]; then
            cd guidolib
            git pull
        fi
        
        if [ -d guidoar ]; then
            cd guidoar
            git pull
        fi
    )
    
    # inscore
    (
        if [ -d "inscore" ]; then
            cd inscore/build
            make clean
            git pull
        fi
    )
    
    # osc
    (
        if [ -d "open-stage-control" ]; then
            cd open-stage-control
            git pull
        fi
    )
    
     # rack
    (
         if [ -d "Rack" ]; then
            cd Rack
            git pull
            git submodule update --init --recursive
            cp Core.json ~/.Rack
            cp -r res ~/.Rack
             
            cd plugins
            for folder in * 
            do
            (
            cd $folder
            make clean  
            git pull
            git submodule update --init --recursive
            )
            done
             
            cd ../Bridge/VST
            if [ -d "Bridge" ]; then
                make clean
                cd ..
                git pull
                git submodule update --init --recursive
            fi
            
            cd ../../
            make clean
            cd dep
            make clean 
        fi
    )
    
    exit
fi

exit
