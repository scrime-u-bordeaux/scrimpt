#!/bin/bash

export SRC_DIR="$HOME/Documents/repos"
export BUILD_DIR="$HOME/Documents/build"
export JOBS=1

cd $SRC_DIR

if [ ! -d "$BUILD_DIR" ]; then
    mkdir $BUILD_DIR
fi

qt() {

sudo apt -y install python3-pip python3.8 p7zip-full
python3.8 -m pip install aqtinstall

if [ ! -d "Qt" ]; then
    python3.8 -m aqt install 5.14.2 linux desktop -m qtwebengine
    mv 5.14.2 Qt
fi

#wget mirrors.ukfast.co.uk/sites/qt.io/online/qtsdkrepository/linux_x64/desktop/qt5_5142/#qt.qt5.5142.qtwebengine.gcc_64/5.14.2-0-202003291222qtwebengine-Linux-RHEL_7_6-GCC-Linux-RHEL_7_6-#X86_64.7z

#7z x 5.14.2-0-202003291222qtwebengine-Linux-RHEL_7_6-GCC-Linux-RHEL_7_6-X86_64.7z

if [ ! -d "qtcreator" ]; then
    mkdir qtcreator
    (
        cd qtcreator
        wget https://download.qt.io/official_releases/qtcreator/4.12/4.12.0/installer_source/linux_gcc_64_rhel72/qtcreator.7z
        7z x qtcreator.7z
    )
fi

}

faust() {

if [ ! -d "faust" ]; then
    git clone --recursive https://github.com/grame-cncm/faust.git
fi

(
cd faust/build
echo '
set ( ASMJS_BACKEND  OFF CACHE STRING  "Include ASMJS backend" FORCE )
set ( C_BACKEND      COMPILER STATIC DYNAMIC        CACHE STRING  "Include C backend"         FORCE )
set ( CPP_BACKEND    COMPILER STATIC DYNAMIC        CACHE STRING  "Include CPP backend"       FORCE )
set ( FIR_BACKEND    OFF        CACHE STRING  "Include FIR backend"       FORCE )
set ( INTERP_BACKEND OFF        CACHE STRING  "Include INTERPRETER backend" FORCE )
set ( JAVA_BACKEND   OFF        CACHE STRING  "Include JAVA backend"      FORCE )
set ( JS_BACKEND     OFF        CACHE STRING  "Include JAVASCRIPT backend" FORCE )
set ( LLVM_BACKEND   COMPILER STATIC DYNAMIC        CACHE STRING  "Include LLVM backend"      FORCE )
set ( OLDCPP_BACKEND OFF        CACHE STRING  "Include old CPP backend"   FORCE )
set ( RUST_BACKEND   OFF        CACHE STRING  "Include RUST backend"      FORCE )
set ( WASM_BACKEND   OFF   CACHE STRING  "Include WASM backend"  FORCE )
' > backends/llvm.cmake
)

(
cd $BUILD_DIR

if [ ! -d "faust" ]; then
   mkdir faust
fi

cd faust

cmake -C $SRC_DIR/faust/build/backends/llvm.cmake -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DINCLUDE_STATIC=1 -DINCLUDE_OSC=1 -DINCLUDE_HTTP=1 -DINCLUDE_EXECUTABLE=1 $SRC_DIR/faust/build 
make -j$JOBS
sudo make install
)

}

score() {

sudo apt -y install libportmidi0 libasound-dev mesa-common-dev libavahi-compat-libdnssd-dev lilv-utils libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev

if [ ! -d "Qt" ]; then
    qt
fi

if [ ! -d "score" ]; then
    git clone --recursive https://github.com/OSSIA/score.git 
fi

if [ ! -d "score-user-library" ]; then
    git clone --recursive https://github.com/OSSIA/score-user-library.git
fi

(
cd $BUILD_DIR

if [ ! -d "score" ]; then
   mkdir score
fi

cd score

cmake $SRC_DIR/score -DCMAKE_PREFIX_PATH=$SRC_DIR/Qt/gcc_64 -DSCORE_CONFIGURATION=static-release -DPORTAUDIO_ONLY_DYNAMIC=1 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
make all_unity -j$JOBS
rm -rf *.deb
cpack
sudo dpkg -i *.deb
)
 
}

ossia() {

if [ ! -d "score" ]; then
    score
fi

if [ ! -d "openFrameworks" ]; then
    of
fi

(
cd openFrameworks/addons
if [ ! -d "ofxOscQuery" ]; then
   git clone --recursive https://github.com/bltzr/ofxOscQuery.git
fi
)

(
cd $BUILD_DIR

if [ ! -d "ossia-cpp" ]; then
   mkdir ossia-cpp
fi
(
cd ossia-cpp

cmake $SRC_DIR/score/3rdparty/libossia -DCMAKE_PREFIX_PATH=$SRC_DIR/Qt/gcc_64 -DOSSIA_CPP_ONLY=1 -DOSSIA_STATIC=1 -DOSSIA_PROTOCOL_ARTNET=0 -DOSSIA_PROTOCOL_AUDIO=0 -DOSSIA_PROTOCOL_JOYSTICK=0 -DOSSIA_PROTOCOL_WIIMOTE=0
make -j$JOBS

 if [ ! -d "$SRC_DIR/openFrameworks/addons/ofxOscQuery/libs/ossia/lib/linux64/" ]; then
     mkdir -p $SRC_DIR/openFrameworks/addons/ofxOscQuery/libs/ossia/lib/linux64/
 fi

if [ ! -d "$SRC_DIR/openFrameworks/addons/ofxOscQuery/libs/ossia/include/" ]; then
    mkdir $SRC_DIR/openFrameworks/addons/ofxOscQuery/libs/ossia/include/
fi

cp src/libossia.a $SRC_DIR/openFrameworks/addons/ofxOscQuery/libs/ossia/lib/linux64/
cp $SRC_DIR/score/3rdparty/libossia/src/ossia-cpp/ossia-cpp98.hpp $SRC_DIR/openFrameworks/addons/ofxOscQuery/libs/ossia/include/
cp $BUILD_DIR/score/3rdparty/libossia/src/ossia_export.h $SRC_DIR/openFrameworks/addons/ofxOscQuery/libs/ossia/include/
)

if [ ! -d "ossia-pd" ]; then
    mkdir ossia-pd
fi
 
cd ossia-pd
 
cmake $SRC_DIR/score/3rdparty/libossia -DCMAKE_PREFIX_PATH=$SRC_DIR/Qt/gcc_64 -DOSSIA_PD_ONLY=1 -DOSSIA_PROTOCOL_ARTNET=0 -DOSSIA_PROTOCOL_AUDIO=0 -DOSSIA_PROTOCOL_JOYSTICK=0 -DOSSIA_PROTOCOL_WIIMOTE=0 -DOSSIA_PD_INSTALL_FOLDER=${HOME}/Documents/Pd/externals/ossia
make -j$JOBS
make install
)
}

supercollider() {

sudo apt -y install libavahi-client-dev libicu-dev libreadline6-dev libxt-dev \
#libboost-filesystem-dev libboost-program-options-dev libboost-regex-dev libboost-test-dev

if [ ! -d "wsclang" ]; then
    git clone --recursive https://github.com/pchdev/wsclang.git
fi

(
cd wsclang

yes | cp -rf overwrites/lang/CMakeLists.txt dependencies/supercollider/lang
yes | cp -rf overwrites/lang/LangPrimSource/OSCData.cpp dependencies/supercollider/lang/LangPrimSource
yes | cp -rf overwrites/lang/LangPrimSource/PyrPrimitive.cpp dependencies/supercollider/lang/LangPrimSource
yes | cp -rf sclang/wsclang dependencies/supercollider/SCClassLibrary/Common
)

(
cd $BUILD_DIR

if [ ! -d "supercollider" ]; then
   mkdir supercollider
fi

cd supercollider

cmake $SRC_DIR/wsclang/dependencies/supercollider -DCMAKE_PREFIX_PATH=$SRC_DIR/Qt/gcc_64 -DCMAKE_BUILD_TYPE=Release 
make -j$JOBS
sudo make install
)

sc3-plugins

}
 
sc3-plugins() {

if [ ! -d "sc3-pluginsHOA" ]; then
    git clone --recursive https://github.com/scrime-u-bordeaux/sc3-pluginsHOA.git
fi

if [ ! -d "adt" ]; then
    git clone https://bitbucket.org/ambidecodertoolbox/adt.git
    (
        cd adt
        octave adt_initialize
    )
fi

if [ ! -d "$HOME/.local/share/ATK/" ]; then
    mkdir $HOME/.local/share/ATK
    (
        cd $HOME/.local/share/ATK
        git clone https://github.com/ambisonictoolkit/atk-kernels.git
        git clone https://github.com/ambisonictoolkit/atk-matrices.git
        
        mv atk-kernels kernels
        mv atk-matrices matrices
    )
fi

(
cd $BUILD_DIR

if [ ! -d "sc3-pluginsHOA" ]; then
   mkdir sc3-pluginsHOA
fi

cd sc3-pluginsHOA

cmake $SRC_DIR/sc3-pluginsHOA -DSC_PATH=$SRC_DIR/wsclang/dependencies/supercollider -DCMAKE_BUILD_TYPE=Release -DLADSPA=0
make -j$JOBS
sudo make install
)

}

ardour() {

sudo apt -y purge ardour
sudo apt -y python install libgtkmm-2.4-dev autotools-dev cdbs dh-buildinfo devscripts libarchive-dev libaubio-dev libboost-dev libcppunit-dev libcurl3-gnutls libcurl4-gnutls-dev libglibmm-2.4-dev liblo-dev liblrdf0-dev libraptor2-dev librubberband-dev libsamplerate0-dev libsratom-dev libserd-dev libsord-dev libtag1-dev libcwiid-dev libxml2-dev itstool vamp-plugin-sdk

if [ ! -d "ardour" ]; then
    git clone --recursive https://github.com/ardour/ardour.git
fi

(
cd ardour

./waf configure --freedesktop --lxvst --lv2 --ptformat --nls --optimize --with-backend=alsa,jack,dummy 
./waf build -j$JOBS
sudo ./waf install
./tools/videotimeline/install_video_tools.sh 
)

}

zyn() {

sudo apt -y install ruby libtool libmxml-dev automake libz-dev mesa-common-dev libgl1-mesa-dev libfontconfig1-dev bison

if [ ! -d "zyn-fusion-build" ]; then
    git clone --recursive https://github.com/zynaddsubfx/zyn-fusion-build.git
fi

(
cd zyn-fusion-build

ruby build-linux.rb
tar -jxvf zyn-fusion-linux-64bit-3.0.3-patch1-release.tar.bz2
cd zyn-fusion
sudo bash ./install-linux.sh
)

}

guido() {

if [ ! -d guidolib ]; then
    git clone https://github.com/grame-cncm/guidolib.git 
fi

(
cd guidolib

cd $BUILD_DIR

if [ ! -d "guidolib" ]; then
   mkdir guidolib
fi

cd guidolib

cmake $SRC_DIR/guidolib/build -DGL=0 -DSTATICLIB=1 -DCMAKE_BUILD_TYPE=release
make -j$JOBS
sudo make install
)

if [ ! -d guidoar ]; then
   git clone https://github.com/grame-cncm/guidoar.git
fi

(
cd guidoar

cd $BUILD_DIR

if [ ! -d "guidoar" ]; then
   mkdir guidoar
fi

cd guidoar

cmake $SRC_DIR/guidoar/build -DCMAKE_BUILD_TYPE=release
make -j$JOBS
sudo make install
)

}

inscore() {

if [ ! -d "inscore" ]; then
    git clone --recursive https://github.com/grame-cncm/inscore.git
fi

(
cd inscore

cd build 
PREFIX=$SRC_DIR/Qt/gcc_64 make -j$JOBS
sudo mv bin/inscoreviewer /usr/bin
sudo mv bin/lib* /usr/lib
)

}

osc() {

# sudo snap install --edge node 
# sudo snap install chromium --classic
sudo apt install nodejs npm --edge

if [ ! -d "open-stage-control" ]; then
    git clone https://github.com/jean-emmanuel/open-stage-control.git
fi

(
cd open-stage-control

npm install

export PLATFORM=linux
npm run build
npm run package

rm -rf dist/open-stage-control-linux-x64/*.deb
npm run deb64
sudo dpkg -i dist/open-stage-control-linux-x64/*.deb
)

}

rack() {

sudo apt -y install gdb libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev zlib1g-dev libgtk2.0-dev jq

if [ ! -d "Rack" ]; then
    git clone --recursive https://github.com/VCVRack/Rack.git
fi

(

cd Rack

make dep -j$JOBS

cd plugins
#[submodule "repos/Fundamentals"]
#AudibleInstruments
	git clone --recursive https://github.com/VCVRack/Fundamental.git
#[submodule "repos/AudibleInstruments"]
#AudibleInstruments
	git clone --recursive https://github.com/VCVRack/AudibleInstruments.git
#[submodule "repos/AmalgamatedHarmonics"]
#AmalgamatedHarmonics
	git clone --recursive https://github.com/jhoar/AmalgamatedHarmonics -b master
	
#[submodule "repos/Befaco"]
#Befaco
	git clone --recursive https://github.com/VCVRack/Befaco -b master
	
#[submodule "repos/Bogaudio"]
#Bogaudio
	git clone --recursive https://github.com/bogaudio/BogaudioModules -b master
	
#[submodule "repos/DHE-Modules"]
#DHE-Modules
	git clone --recursive https://github.com/dhemery/DHE-Modules -b master
	
#[submodule "repos/ESeries"]
#ESeries
	git clone --recursive https://github.com/VCVRack/ESeries -b master
	
#[submodule "repos/FrozenWasteland"]
#FrozenWasteland
	git clone --recursive https://github.com/almostEric/FrozenWasteland -b master
	
#[submodule "repos/Gratrix"]
#Gratrix
	git clone --recursive https://github.com/gratrix/vcv-gratrix -b master
	
#[submodule "repos/HetrickCV"]
#HetrickCV
	git clone --recursive https://github.com/mhetrick/hetrickcv -b master
	
#[submodule "repos/ML_modules"]
#ML_modules
	git clone --recursive https://github.com/martin-lueders/ML_modules -b master
	
#[submodule "repos/NauModular"]
#NauModular
	git clone --recursive https://github.com/naus3a/NauModular -b master
	
#[submodule "repos/Ohmer"]
#Ohmer
	git clone --recursive https://github.com/DomiKamu/Ohmer -b master
	
#[submodule "repos/PvC"]
#PvC
	git clone --recursive https://github.com/phdsg/PvC.git -b release
#[submodule "repos/RJModules"]
#RJModules
	git clone --recursive https://github.com/Miserlou/RJModules -b master
	
#[submodule "repos/TheXOR"]
#TheXOR
	git clone --recursive https://github.com/The-XOR/RackPlugins -b master
	
#[submodule "repos/dBiz"]
#dBiz
	git clone --recursive https://github.com/dBiz/dBiz -b master
	
#[submodule "repos/luckyxxl"]
#luckyxxl
	git clone --recursive https://github.com/luckyxxl/vcv_luckyxxl -b master
	
#[submodule "repos/moDllz"]
#moDllz
	git clone --recursive https://github.com/dllmusic/VCV_moDllz -b master
	
#[submodule "repos/mtsch-plugins"]
#mtsch-plugins
	git clone --recursive https://github.com/mtsch/mtsch-vcvrack-plugins -b master
	
#[submodule "repos/s-ol"]
#s-ol
	git clone --recursive https://github.com/s-ol/vcvmods -b master
	
#[submodule "repos/squinkylabs-plug1"]
#squinkylabs-plug1
	git clone --recursive https://github.com/squinkylabs/SquinkyVCV -b master
	
#[submodule "repos/ValleyFree"]
#Valley
	git clone --recursive https://github.com/ValleyAudio/ValleyRackFree.git -b master
	
#[submodule "repos/CharredDesert"]
#CharredDesert
	git clone --recursive https://github.com/JerrySievert/CharredDesert -b master
	
#[submodule "repos/SynthKit"]
#SynthKit
	git clone --recursive https://github.com/JerrySievert/SynthKit -b master
	
#[submodule "repos/JW-Modules"]
#JW-Modules
	git clone --recursive https://github.com/jeremywen/JW-Modules -b master
	
#[submodule "repos/Alikins"]
#Alikins
	git clone --recursive https://github.com/alikins/Alikins-rack-plugins -b master
	
#[submodule "repos/DrumKit"]
#DrumKit
	git clone --recursive https://github.com/SVModular/DrumKit -b master
	
#[submodule "repos/SonusModular"]
#SonusModular
	git clone --recursive https://gitlab.com/sonusdept/sonusmodular.git -b master
	
#[submodule "repos/ArableInstruments"]
#ArableInstruments
	git clone --recursive https://github.com/adbrant/ArableInstruments -b master
	
#[submodule "repos/LOGinstruments"]
#LOGinstruments
	git clone --recursive https://github.com/leopard86/LOGinstruments -b master
	
#[submodule "repos/BaconMusic"]
#BaconMusic
	git clone --recursive https://github.com/baconpaul/BaconPlugs.git -b master
	
#[submodule "repos/MrLumps"]
#MrLumps
	git clone --recursive https://github.com/djpeterso23662/MrLumps -b master
	
#[submodule "repos/Southpole"]
#Southpole
	git clone --recursive https://github.com/gbrandt1/southpole-vcvrack.git -b 0.6
#[submodule "repos/Southpole-parasites"]
#Southpole-parasites
	git clone --recursive https://github.com/gbrandt1/southpole-vcvrack.git -b 0.6-parasites
#[submodule "repos/cf"]
#cf
	git clone --recursive https://github.com/cfoulc/cf
	
#[submodule "repos/ImpromptuModular"]
#ImpromptuModular
	git clone --recursive https://github.com/MarcBoule/ImpromptuModular.git
	
#[submodule "repos/modular80"]
#modular80
	git clone --recursive https://github.com/cschol/modular80
	
#[submodule "repos/com-soundchasing-stochasm"]
#com-soundchasing-stochasm
	git clone --recursive https://github.com/teletypist/stochasm.git
	
#[submodule "repos/ParableInstruments"]
#ParableInstruments
	git clone --recursive https://github.com/adbrant/ArableInstruments.git -b parable
#[submodule "repos/NonLinearInstruments"]
#NonLinearInstruments
	git clone --recursive https://github.com/NonLinearInstruments/NLNRI_VCVRackPlugins
	
#[submodule "repos/mscHack"]
#mscHack
	git clone --recursive https://github.com/mschack/VCV-Rack-Plugins.git
	
#[submodule "repos/Koralfx-Modules"]
#Koralfx-Modules
	git clone --recursive https://github.com/koralfx/Koralfx-Modules
	
#[submodule "repos/Qwelk"]
#Qwelk
	git clone --recursive https://github.com/raincheque/qwelk.git
#[submodule "repos/alto777_LFSR"]
#alto777_LFSR
	git clone --recursive https://github.com/alto777/LFSR.git
#[submodule "repos/AS"]
#AS
	git clone --recursive https://github.com/AScustomWorks/AS.git
	
#[submodule "repos/ErraticInstruments"]
#ErraticInstruments
	git clone --recursive https://github.com/bafonso/Erratic.git -b v0.6
#[submodule "repos/PG-Instruments"]
#PG-Instruments
	git clone --recursive https://github.com/imekon/PG-Instruments.git
#[submodule "repos/SubmarineFree"]
#SubmarineFree
	git clone --recursive https://github.com/david-c14/SubmarineFree.git
#[submodule "repos/unless_modules"]
#unless_modules
	git clone --recursive https://gitlab.com/unlessgames/unless_modules.git
	
#[submodule "repos/mental"]
#mental
	git clone --recursive https://github.com/Strum/Strums_Mental_VCV_Modules
	
#[submodule "repos/SerialRacker"]
#SerialRacker
	git clone --recursive https://github.com/apbianco/SerialRacker.git
#[submodule "repos/BOKONTEPByteBeatMachine"]
#BOKONTEPByteBeatMachine
	git clone --recursive https://github.com/bokontep/BokontepByteBeatMachine.git
#[submodule "repos/huaba"]
#huaba
	git clone --recursive https://github.com/dhuber81/huaba.git
#[submodule "repos/Bidoo"]
#Bidoo
	git clone --recursive https://github.com/sebastien-bouffier/Bidoo.git
#[submodule "repos/trowaSoft"]
#trowaSoft
	git clone --recursive https://github.com/j4s0n-c/trowaSoft-VCV.git
#[submodule "repos/21kHz"]
#21kHz
	git clone --recursive https://github.com/21kHz/21kHz-rack-plugins.git
#[submodule "repos/Nohmad"]
#Nohmad
	git clone --recursive https://github.com/joelrobichaud/Nohmad.git
#[submodule "repos/RODENTMODULES"]
#RODENTMODULES
	git clone --recursive https://github.com/RODENTCAT/RODENTMODULES.git
#[submodule "repos/computerscare"]
#computerscare
	git clone --recursive https://github.com/freddyz/computerscare-vcv-modules
#[submodule "repos/Geodesics"]
#Geodesics
	git clone --recursive https://github.com/MarcBoule/Geodesics.git
#[submodule "repos/KarateSnoopy"]
#KarateSnoopy
	git clone --recursive https://github.com/KarateSnoopy/vcv-karatesnoopy
#[submodule "repos/noobhour"]
#noobhour
	git clone --recursive https://github.com/NicolasNeubauer/noobhour_modules
#[submodule "repos/TriggerFish-Elements"]
#TriggerFish-Elements
	git clone --recursive https://github.com/JTriggerFish/TriggerFish-VCV.git
#[submodule "repos/SubmarineUtility"]
#SubmarineUtility
	git clone --recursive https://github.com/david-c14/SubmarineUtility.git
#[submodule "repos/BeckstromResearch"]
#BeckstromResearch
	git clone --recursive https://github.com/chrisbeckstrom/Beckstrom_Research_Rack.git
#[submodule "repos/Sculpt-O-Sound"]
#Sculpt-O-Sound
	git clone --recursive https://github.com/josbouten/Sculpt-O-Sound.git
#[submodule "repos/aP-Modules"]
#aP-Modules
	git clone --recursive https://github.com/aptrn/aP-Modules.git
#[submodule "repos/arjo_modules"]
#arjo_modules
	git clone --recursive https://github.com/ArjoNagelhout/arjo_modules
#[submodule "repos/NocturnalEncoder"]
#NocturnalEncoder
	git clone --recursive https://github.com/djpeterso23662/NocturnalEncoder.git
#[submodule "repos/ModularFungi"]
#ModularFungi
	git clone --recursive https://github.com/david-c14/ModularFungi.git
#[submodule "repos/HolonicSystems-Free"]
#HolonicSystems-Free
	git clone --recursive https://github.com/hdavid/VCVRack-Holon.ist.git
#[submodule "repos/rcm"]
#rcm
	git clone --recursive https://github.com/Rcomian/rcm-modules.git
#[submodule "repos/QuantalAudio"]
#QuantalAudio
	git clone --recursive https://github.com/sumpygump/quantal-audio.git
#[submodule "repos/EH_modules"]
#EH_modules
	git clone --recursive https://github.com/eh2k/fv1-emu
#[submodule "repos/Bark"]
#Bark
	git clone --recursive https://github.com/Coirt/Bark.git
#[submodule "repos/Skylights"]
#Skylights
	git clone --recursive https://github.com/Skrylar/skylights-vcv.git
#[submodule "repos/SkJack"]
#SkJack
	git clone --recursive https://github.com/Skrylar/skjack-vcv.git
#[submodule "repos/LabSeven"]
#LabSeven
	git clone --recursive https://github.com/LabSevenDevVCVRack/LabSeven_VCVRack_modules.git
#[submodule "repos/MicMusic"]
#MicMusic
	git clone --recursive https://github.com/very-cool-name/MicMusic-VCV.git
#[submodule "repos/Edge"]
#Edge
	git clone --recursive https://github.com/Edge-Modules/Edge.git
#[submodule "repos/Quadraphonics"]
#Quadraphonics
	git clone --recursive https://github.com/KoreTeknology/Quadraphonic-Plugins-for-VCV-Rack.git
#[submodule "repos/UnforgettableLuncheon"]
#UnforgettableLuncheon
	git clone --recursive https://github.com/johnnymurf/Unforgettable-Luncheon.git
#[submodule "repos/ExpertSleepers-Encoders"]
#ExpertSleepers-Encoders
	git clone --recursive https://github.com/expertsleepersltd/vcvrack-encoders
#[submodule "repos/WhatTheRack"]
#WhatTheRack
	git clone --recursive https://github.com/korfuri/WhatTheRack.git
#[submodule "repos/8Mode"]
#8Mode
	git clone --recursive https://github.com/8Mode/8Mode-VCV_Modules.git
#[submodule "repos/Starling_Via"]
#Starling_Via
	git clone --recursive https://github.com/starlingcode/Via-for-Rack.git
#[submodule "repos/CatroModulo"]
#CatroModulo
	git clone --recursive https://github.com/catronomix/catro-modulo.git
#[submodule "repos/sb-StochKit"]
#sb-StochKit
	git clone --recursive https://github.com/smbddha/sb-StochKit.git
#[submodule "repos/Stoermelder-P1"]
#Stoermelder-P1
	git clone --recursive https://github.com/stoermelder/vcvrack-packone
#[submodule "repos/FrankBuss"]
#FrankBuss
	git clone --recursive https://github.com/FrankBuss/FrankBussRackPlugin.git
#[submodule "repos/CountModula"]
#CountModula
	git clone --recursive https://github.com/countmodula/VCVRackPlugins.git
#[submodule "repos/CYC"]
#CYC
	git clone --recursive https://github.com/mrletourneau/strong_kar.git
#[submodule "repos/MosquitoLabs"]
#MosquitoLabs
	git clone --recursive https://github.com/rmosquito/vcv-mosquito.git
#[submodule "repos/ChortlingHamsterModules"]
#ChortlingHamsterModules
	git clone --recursive https://github.com/chortlinghamster/modules.git
#[submodule "repos/SLM"]
#SLM
	git clone --recursive https://github.com/salvolm84/SLM-vcv-rack.git
#[submodule "repos/Circlefade"]
#Circlefade
	git clone --recursive https://github.com/max-circlefade/Circlefade.git
#[submodule "repos/MyLittleTools"]
#MyLittleTools
	git clone --recursive https://github.com/digitalhappens/MyLittleTools.git
#[submodule "repos/ZZC"]
#ZZC
	git clone --recursive https://github.com/zezic/ZZC.git
#[submodule "repos/AnimatedCircuits"]
#AnimatedCircuits
	git clone --recursive https://github.com/AnimatedCircuits/RackModules.git
#[submodule "repos/Ahornberg"]
#Ahornberg
	git clone --recursive https://github.com/Ahornberg/Ahornberg-Microtonal.git
#[submodule "repos/Prism"]
#Prism
	git clone --recursive https://github.com/AmalgamatedHarmonics/Prism.git
#[submodule "repos/repelzen"]
#repelzen
	git clone --recursive https://github.com/wiqid/repelzen
#[submodule "repos/LomasModules"]
#LomasModules
	git clone --recursive https://github.com/LomasModules/LomasModules
#[submodule "repos/wiqid-anomalies"]
#wiqid-anomalies
	git clone --recursive https://github.com/wiqid/anomalies.git
#[submodule "repos/GoodSheperd"]
#GoodSheperd
	git clone --recursive https://github.com/jensschulze/GoodSheperd.git
#[submodule "repos/SignalFlux"]
#SignalFlux
	git clone --recursive https://github.com/signal-flux/Signal-Flux-VCV-Rack-Modules.git
#[submodule "repos/WrongPeople"]
#WrongPeople
	git clone --recursive https://github.com/WrongPeople/WrongPeopleVCV.git
#[submodule "repos/CatroBlanco"]
#CatroBlanco
	git clone --recursive https://github.com/catronomix/Catro-Blanco.git
#[submodule "repos/aridacity"]
#aridacity
	git clone --recursive https://github.com/aridacity/aridacityVCV.git
#[submodule "repos/admiral"]
#admiral
	git clone --recursive https://github.com/wapiflapi/admiral.git
#[submodule "repos/GlueTheGiant"]
#GlueTheGiant
	git clone --recursive https://github.com/gluethegiant/gtg-rack.git
#[submodule "repos/vitamin"]
#vitamin
	git clone --recursive https://github.com/xaviershay/vitamin-vcv-modules.git
#[submodule "repos/Chiptuner"]
#Chiptuner
	git clone --recursive https://github.com/The-Great-Assyr/Chiptuner.git
#[submodule "repos/ChordController"]
#ChordController
	git clone --recursive https://github.com/wilsontr/ChordController.git
#[submodule "repos/stocaudio"]
#stocaudio
	git clone --recursive https://github.com/aptrn/stocaudio-modules.git
#[submodule "repos/LifeFormModular"]
#LifeFormModular
	git clone --recursive https://github.com/TimeControlledOrganism/LifeFormModular.git
#[submodule "repos/TercerBrazo"]
#TercerBrazo
	git clone --recursive https://github.com/diegodorado/TercerBrazo.git
#[submodule "repos/Nozoid"]
#Nozoid
	git clone --recursive https://github.com/ch-nry/VCV_nozori.git
#[submodule "repos/TinyTricks"]
#TinyTricks
	git clone --recursive https://github.com/thomassidor/tinytricks.git
#[submodule "repos/JE"]
#JE
	git clone --recursive https://github.com/eres-j/VCVRack-plugin-JE.git
#[submodule "repos/LittleUtils"]
#LittleUtils
	git clone --recursive https://github.com/mgunyho/Little-Utils.git
#[submodule "repos/OrangeLine"]
#OrangeLine
	git clone --recursive https://github.com/Stubs42/OrangeLine.git
#[submodule "repos/PdArray"]
#PdArray
	git clone --recursive https://github.com/mgunyho/PdArray.git
#[submodule "repos/kocmoc"]
#kocmoc
	git clone --recursive https://github.com/janne808/kocmoc-rack-modules.git
#[submodule "repos/MindMeldModular"]
#MindMeldModular
	git clone --recursive https://github.com/MarcBoule/MindMeldModular.git
#[submodule "repos/RacketScience"]
#RacketScience
	git clone --recursive https://github.com/ContemporaryInsanity/RacketScience.git
#[submodule "repos/SA-Seasons"]
#SA-Seasons
	git clone --recursive https://github.com/SpektroAudio/Seasons.git
#[submodule "repos/pfzzz"]
#pfzzz
	git clone --recursive https://github.com/pfzzz/rack-plugin.git
#[submodule "repos/scanner-darkly-collection-one"]
#scanner-darkly-collection-one
	git clone --recursive https://github.com/scanner-darkly/vcv-collection-one.git
#[submodule "repos/MockbaModular"]
#MockbaModular
	git clone --recursive https://github.com/MockbaTheBorg/MockbaModular.git
#[submodule "repos/SurgeRack"]
#SurgeRack
	git clone --recursive https://github.com/surge-synthesizer/surge-rack.git
#[submodule "repos/NEXSwitches"]
#NEXSwitches
	git clone --recursive https://github.com/lkdjiin/SwitchesModules.git
#[submodule "repos/23volts"]
#23volts
	git clone --recursive https://github.com/23volts/23volts-vcv.git
#[submodule "repos/MSM"]
#MSM
	git clone --recursive https://github.com/netboy3/MSM-vcvrack-plugin.git
#[submodule "repos/ReTunesFree"]
#ReTunesFree
	git clone --recursive https://github.com/DominoMarama/ReTunesFree.git
#[submodule "repos/AriaSalvatrice"]
#AriaSalvatrice
	git clone --recursive https://github.com/AriaSalvatrice/AriaVCVModules.git
#[submodule "repos/AuntyLangtonsFree"]
#AuntyLangtonsFree
	git clone --recursive https://github.com/64MM4-KN1F3/AuntyLangtons-FREE.git
#[submodule "repos/Sckitam"]
#Sckitam
	git clone --recursive https://github.com/philippesalembier/SckitamVCV.git
#[submodule "repos/Kosmodules-Free"]
#Kosmodules-Free
	git clone --recursive https://github.com/calvinkosmatka/Kosmodules-Free.git
#[submodule "repos/PS-PurrSoftware"]
#PS-PurrSoftware
	git clone --recursive https://github.com/knchaffin/Meander.git
#[submodule "repos/voxglitch"]
#voxglitch
	git clone --recursive https://github.com/clone45/voxglitch.git
#[submodule "repos/AaronStatic"]
#AaronStatic
	git clone --recursive https://github.com/aaronstatic/AaronStatic_modules.git


if [ ! -d "$HOME/.Rack" ]; then
    mkdir $HOME/.Rack 
    mkdir $HOME/.Rack/plugins-v1 
fi

for folder in * 
do
(
cd $folder
make dep $1 -j$JOBS
make $1 -j$JOBS
make install
)
done

cd ..

# if [ ! -d "Bridge" ]; then
#     git clone --recursive https://github.com/scrime-u-bordeaux/Bridge.git
# fi
# 
# cd Bridge/VST
# 
# if [ ! -d "VST2_SDK" ]; then
#     wget https://archive.org/download/VST2SDK/vstsdk2_4.zip
#     unzip vstsdk2_4.zip
#     mv vstsdk2.4 VST2_SDK
# fi
# 
# make dist -j$JOBS
# sudo make install
# 
# cd ../../

make -j$JOBS
sudo mv Rack /usr/bin
cp Core.json ~/.Rack
cp -r res ~/.Rack
)

}

arduino() {

if [ ! -e "arduino" ]; then
    rm -rf arduino
    wget https://downloads.arduino.cc/arduino-1.8.12-linux64.tar.xz
fi

if [ ! -e "TeensyduinoInstall.linux64" ]; then
    rm -rf TeensyduinoInstall.linux64 
    wget https://www.pjrc.com/teensy/td_151/TeensyduinoInstall.linux64
    rm -rf 49-teensy.rules
    wget http://www.pjrc.com/teensy/49-teensy.rules
fi

if [ ! -e "arduino" ]; then
    rm -rf arduino
fi

tar -xJvf arduino-*-linux64.tar.xz -C .
rm -rf arduino-*-linux64.tar.xz
mv arduino* arduino
sudo cp 49-teensy.rules /etc/udev/rules.d/49-teensy.rules

(
cd arduino
./arduino-linux-setup.sh $USER
sudo ./install.sh
)

chmod +x TeensyduinoInstall.linux64

echo "install Teensyduino in $SRC_DIR/arduin" 

./TeensyduinoInstall.linux64

}

processing() {

if [ ! -e "processing" ]; then
    rm -rf processing
    wget https://download.processing.org/processing-3.5.4-linux64.tgz
fi

if [ ! -e "processing" ]; then
    rm -rf processing
fi

tar zxvf processing-3.5.4-linux64.tgz -C .
rm -rf processing-*-linux64.tgz
mv processing* processing

(
cd processing
sudo ./install.sh
)

}

of() {

if [ ! -d "qtcreator" ]; then
    qt
fi

if [ ! -d "openframeworks" ]; then
   git clone --recursive https://github.com/openframeworks/openFrameworks.git
fi

(
cd openFrameworks/scripts/linux/ubuntu

sudo apt install -yy libc6 qbs libmpg123-dev
yes | sudo ./install_dependencies.sh
cd ../
./download_libs.sh
./compileOF.sh -j$JOBS
./compilePG.sh -j$JOBS
cd ../qtcreator/
./install_template.sh
)
}

repos_pull ()
{
    (
        cd $BUILD_DIR
        rm -rf *
    )
    
    # faust
    (
        if [ -d "faust" ]; then
            cd faust
            git pull
            git submodule update --init --recursive 
        fi
    )
    
    # score
    (
        if [ -d "score" ]; then
            (
                cd score 
                git pull    
                git submodule update --init --recursive 
            )
        fi

        if [ -d "score-user-library" ]; then 
            cd score-user-library
            git pull
        fi
    )
    
    # supercollider
    (
        if [ -d "wsclang" ]; then
            cd wsclang
            git pull
            git submodule update --init --recursive
        fi
    )

    # sc3-pluginsHOA
    (
        if [ -d "sc3-pluginsHOA" ]; then
            (
                cd sc3-pluginsHOA
                git pull
                git submodule update --init --recursive 
            )
        fi

        if [ -d "adt" ]; then
            cd adt
            git pull
        fi

        if [ -d "$HOME/.local/share/ATK/" ]; then
            cd $HOME/.local/share/ATK/kernels
            git pull
        
            cd ../matrices
            git pull
        fi
    )
    
    # ardour
    (
        if [ -d "ardour" ]; then
            cd ardour
            ./waf clean
            git pull
            git submodule update --init --recursive
        fi
    )
    
    # zyn
    (
        if [ -d "zyn-fusion-build" ]; then
            cd zyn-fusion-build
            git pull
            git submodule update --init --recursive
        fi
    )
    
    # guido
    (
        if [ -d "guidolib" ]; then
            cd guidolib
            git pull
        fi
        
        if [ -d "guidoar" ]; then
            cd guidoar
            git pull
        fi
    )
    
    # inscore
    (
        if [ -d "inscore" ]; then
            cd inscore/build
            make clean
            git pull
        fi
    )
    
    # osc
    (
        if [ -d "open-stage-control" ]; then
            cd open-stage-control
            git pull
        fi
    )
    
     # rack
    (
         if [ -d "Rack" ]; then
            cd Rack
            git pull
            git submodule update --init --recursive
            cp Core.json ~/.Rack
            cp -r res ~/.Rack
            
            (
            cd plugins
            for folder in * 
            do
            (
            cd $folder
            make clean  
            git pull
            git submodule update --init --recursive
            )
            done
             
#             cd ../Bridge/VST
#             if [ -d "Bridge" ]; then
#                 make clean
#                 cd ..
#                 git pull
#                 git submodule update --init --recursive
#             fi
            )
            
            make clean
            cd dep
            make clean 
        fi
    )
    
    (
        if [ -d "openframeworks" ]; then
            cd openframeworks
            git pull
            git submodule update --init --recursive
        fi
    )
}

repos_help() {

less << _EOF_

 Repos -- Debian/Ubuntu repository cloning, pulling and buildng Tool (Version 1.2)  -help

 Repos is a tool that automates the update procedure for Debian and Ubuntu based
 Linux systems.

 Press "q" to exit this Help page.

 Commands:    
    Running "repos" with no options will not do anything.

    repos --help = shows this help page.
    repos --pull = pulls every repository and clears out build directory.
    
 By Joe Collins www.ezeelinux.com (GNU/General Public License version 2.0)
 
 Disclaimer:

 THIS SOFTWARE IS PROVIDED BY EZEELINUX “AS IS” AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL EZEELINUX BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.

_EOF_

}

if [ ! -z "$2" ]; then 
    JOBS=$2
fi

if [ "$1" == "--qt" ]; then
    qt
    exit
fi

if [ "$1" == "--faust" ]; then
    faust
    exit
fi

if [ "$1" == "--score" ]; then
    score
    exit
fi

if [ "$1" == "--ossia" ]; then
    ossia
    exit
fi

if [ "$1" == "--supercollider" ]; then
    supercollider
    exit
fi

if [ "$1" == "--sc3-plugins" ]; then
    sc3-plugins
    exit
fi

if [ "$1" == "--ardour" ]; then
    ardour
    exit
fi

if [ "$1" == "--zyn" ]; then
    zyn
    exit
fi

if [ "$1" == "--guido" ]; then
    guido
    exit
fi

if [ "$1" == "--inscore" ]; then
    inscore
    exit
fi

if [ "$1" == "--osc" ]; then
    osc
    exit
fi

if [ "$1" == "--rack" ]; then
    rack
    exit
fi

if [ "$1" == "--arduino" ]; then
    arduino
    exit
fi

if [ "$1" == "--processing" ]; then
    processing
    exit
fi

if [ "$1" == "--of" ]; then
    of
    exit
fi

if [ "$1" == "--all" ]; then
    faust
    score
    ossia
    supercollider
    ardour
    zyn
    guido
    inscore
    osc
    rack
    arduino
    processing
    of
    exit
fi

if [ "$1" == "--help" ]; then
    repos_help
    exit
fi

if [ "$1" == "--pull" ]; then
    repos_pull
    exit
fi

exit
